{
highest_final_list$times[i] = highest_final_list$times[i] + 1;
}
}
}
print("Highest final score chart and submit times");
print(highest_final_list);
highest_final_list_plot = data.frame(
"times" = unique(highest_final_list$times),
"frequency" = c(0)
)
for(i in 1:nrow(highest_final_list_plot))
{
for(j in 1:nrow(highest_final_list))
if(highest_final_list_plot$times[i] == highest_final_list$times[j] )
{
highest_final_list_plot$frequency[i] = highest_final_list_plot$frequency[i] + 1
}
}
print(highest_final_list_plot)
barplot(highest_final_list_plot$frequency,ylim = c(0,300),xlab = 'so lan nop',ylab = 'tan so xuat hien',names.arg = highest_final_list_plot$times, main = "Pho tong so lan nop cua nhung hoc sinh co 1 diem cao nhat");
#2.k)
print("2.k)")
highest_score = max(DataChart$total_score)
print("Highest Final Score");
print(highest_score);
#2.l)
print("2.l)")
print("stdid List of student with atleast one highest_score");
print(highest_chart$stdid);
#2.m)
print("2.m)")
print("Highest final score chart and submit times");
print(highest_final_list)
barplot(highest_final_list_plot$frequency,ylim = c(0,300),xlab = 'so lan nop',ylab = 'tan so xuat hien',names.arg = highest_final_list_plot$times, main = "Pho tong so lan nop cua nhung hoc sinh co 1 diem cao nhat");
#2.k)
print("2.k)")
highest_score = max(DataChart$total_score)
print("Highest Final Score");
print(highest_score);
#2.l)
print("2.l)")
print("stdid List of student with atleast one highest_score");
print(highest_chart$stdid);
#2.m)
print("2.m)")
print("Highest final score chart and submit times");
print(highest_final_list)
barplot(highest_final_list_plot$frequency,ylim = c(0,300),xlab = 'so lan nop',ylab = 'tan so xuat hien',names.arg = highest_final_list_plot$times, main = "Pho tong so lan nop cua nhung hoc sinh co diem tong ket cao nhat");
#2.n) Caculate average final_score of all student
print("2.n)")
average_final_score_all_student = sum(final_score_chart$final_score) / nrow(final_score_chart);
average_final_score_all_student = round(average_final_score_all_student * 10) / 10;
print("average_final_score_all_student")
print(average_final_score_all_student)
final_score_chart$average_score = c(0)
final_score_chart$times = c(0)
for (i in 1:nrow(final_score_chart))
{
stdid_temp = final_score_chart$stdid[i];
for(j in 1:nrow(DataChart))
{
stdid_temp_2 = DataChart$stdid[j];
if(!is.na(stdid_temp_2) && (stdid_temp_2 == stdid_temp))
{
final_score_chart$average_score[i] = final_score_chart$average_score[i] * final_score_chart$times[i] + DataChart$total_score[j]
final_score_chart$times[i] = final_score_chart$times[i] + 1
final_score_chart$average_score[i] = final_score_chart$average_score[i] / final_score_chart$times[i]
}
}
}
#2.o) Number of student have a average final score
print("2.o)")
score_match_average_list = subset(final_score_chart, final_score == average_final_score_all_student)
print("Number of student have a average final score")
print(nrow(score_match_average_list))
#2.p) Median, Max, Min
print("2.p)")
Median_final_score = median(final_score_chart$final_score)
print("Median average score");
print(Median_final_score);
Max_final_score = max(final_score_chart$final_score)
print("Max average score");
print(Max_final_score);
Min_final_score = min(final_score_chart$final_score)
print("Min average score");
print(Min_final_score);
#2.q)Range, Variance, Standard Deviation
print("2.q)")
range_final = range(final_score_chart$final_score)
print("Range of average score");
range_final_value = range_final[2] - range_final[1]
print(range_final_value)
#Create result_chart save total_submit and numofstudent classified by final score
result_chart = data.frame(
"score" = NULL,
"times" = NULL
)
for(i in 1:nrow(final_score_chart))
{
if(final_score_chart$final_score[i] %in% result_chart$score)
{
index = which(result_chart$score == final_score_chart$final_score[i])
result_chart$times[index] = result_chart$times[index] + 1
}
else
{
temp_chart = data.frame(
"score" = c(final_score_chart$final_score[i]),
"times" = 1
)
result_chart = rbind(result_chart,temp_chart)
}
}
variance_final_score = var(final_score_chart$final_score)
standard_deviation_final_score = sd(final_score_chart$final_score)
print("Variance average score")
print(variance_final_score)
print("Standard Deviation average score")
print(standard_deviation_final_score)
#2.r)Skewness and Kurtosis of Average Score
print("2.r)")
print("Skewness Average Score")
print(skewness(final_score_chart$final_score))
print("Kurtosis Average Score")
print(kurtosis(final_score_chart$final_score))
#2.s)Quantile 1st and 3rd
print("2.s)")
print("Quantile")
quantile(final_score_chart$final_score, 0.25)
quantile(final_score_chart$final_score, 0.75)
#2.t)
print("2.t)")
print("result_chart")
result_chart = result_chart[order(-result_chart$score), ,drop = FALSE]
print(result_chart$times[1] + result_chart$times[2])
#2.u)
print("2.u)")
final_score_list_first = subset(final_score_chart, final_score == result_chart$score[1])
final_score_list_second = subset(final_score_chart, final_score == result_chart$score[2])
final_score_list_first_second = rbind(final_score_list_second, final_score_list_first)
print(final_score_list_first_second)
final_score_list_first_second_plot = data.frame(
"times" = unique(final_score_list_first_second$times),
"frequency" = c(0)
)
for(i in 1:nrow(final_score_list_first_second_plot))
{
for(j in 1:nrow(final_score_list_first_second))
if(final_score_list_first_second_plot$times[i] == final_score_list_first_second$times[j] )
{
final_score_list_first_second_plot$frequency[i] = final_score_list_first_second_plot$frequency[i] + 1
}
}
print(final_score_list_first_second_plot)
barplot(final_score_list_first_second_plot$frequency,ylim = c(0,300),xlab = 'so lan nop',ylab = 'tan so xuat hien',names.arg = final_score_list_first_second_plot$times, main = "Pho so lan nop cua nhung hoc sinh co 1 diem tong ket cao nhat/nhi");
#2.v)
print("2.v)")
print(result_chart)
#2.w)
print("2.w)")
result_chart$total_submit = c(0)
for(i in 1:nrow(result_chart))
{
for(j in 1:nrow(final_score_chart))
{
if(result_chart$score[i] == final_score_chart$final_score[j])
{
result_chart$total_submit[i] = result_chart$total_submit[i] + final_score_chart$times[j]
}
}
}
result_chart$score = c(1:nrow(result_chart))
print(result_chart)
print(sum(final_score_chart$times))
barplot(result_chart$times,xlab = 'Phan diem tong ket', ylim = c(0,400),ylab = 'So sinh vien',names.arg = result_chart$score, main = "Tong so sinh vien theo phan diem cao thu k");
barplot(result_chart$total_submit,ylim = c(0,400),xlab = 'Phan diem tong ket',ylab = 'So lan nop',names.arg = result_chart$score, main = "Tong so lan nop theo phan diem cao thu k");
barplot(result_chart$total_submit,ylim = c(0,500),xlab = 'Phan diem tong ket',ylab = 'So lan nop',names.arg = result_chart$score, main = "Tong so lan nop theo phan diem cao thu k");
options(encoding = "UTF-8");
library(utf8);
library(tidyverse);
library(utf8);
library(tidyverse);
library(xlsx);
library(e1071);
sum_all = function(data_col,data_size) {
all_score = 0
for(i in 1:data_size)
{
all_score = all_score + (data_col[i])
}
return (all_score)
}
#Get data
DataChart = xlsx::read.xlsx("Data\\4.xlsx", sheetIndex = 1, stringsAsFactors = FALSE)
colnames(DataChart) = c("stdid", "stat", "time_begin", "time_end", "time_duration", "total_score", "Q1", "Q2", "Q3", "Q4", "Q5", "Q6", "Q7", "Q8", "Q9", "Q10")
#Question 2
# 2.a) Total Score List
print("2.a)")
for(i in 1:nrow(DataChart))
{
if(DataChart$total_score[i] == "-")
{
DataChart$total_score[i] = "-1,00"
}
}
DataChart$total_score = gsub(",",".",DataChart$total_score);
DataChart$total_score = as.numeric(DataChart$total_score);
DataChart = subset(DataChart, total_score >= 0)
total_score_list = DataChart$total_score
print(total_score_list)
# 2.b) Finding lowest-score
print("2.b)")
lowest_score = min(DataChart$total_score);
print("lowest score");
print(lowest_score);
print("2.c)")
# 2.c) List of student with lowest-score
lowest_list = subset(DataChart, total_score == lowest_score);
lowest_list = lowest_list$stdid;
unique(lowest_list, incomparables = FALSE)
print("list student have a lowest score submit");
lowest_list = data.frame(
"stdid" = lowest_list
)
print(lowest_list$stdid);
# 2.d) Spectral of submit time from students of lowest score
print("2.d)")
lowest_list$times = c(0)
for (i in 1:nrow(lowest_list))
{
stdid_temp = lowest_list$stdid[i];
for(j in 1:nrow(DataChart))
{
stdid_temp_2 = DataChart$stdid[j];
if(!is.na(stdid_temp_2) && (stdid_temp_2 == stdid_temp))
{
lowest_list$times[i] = lowest_list$times[i] + 1;
}
}
}
print("Time submit of students having at least 1 lowest score submit");
print(lowest_list);
lowest_list$times = as.integer(lowest_list$times)
print(class(lowest_list$times))
lowest_list_plot = data.frame(
"times" = unique(lowest_list$times),
"frequency" = c(0)
)
for(i in 1:nrow(lowest_list_plot))
{
for(j in 1:nrow(lowest_list))
if(lowest_list_plot$times[i] == lowest_list$times[j] )
{
lowest_list_plot$frequency[i] = lowest_list_plot$frequency[i] + 1
}
}
print(lowest_list_plot)
barplot(lowest_list_plot$frequency,ylim = c(0,10),xlab = 'so lan nop',ylab = 'tan so xuat hien',names.arg = lowest_list_plot$times, main = "Pho tong so lan nop cua nhung hoc sinh co 1 diem thap nhat");
#2.e) Get the lowest student final score
print("2.e)")
DataChart = subset(DataChart, !(is.na(stdid)) );
stdid_list_e = DataChart;
stdid_list_e_stdid = stdid_list_e$stdid;
stdid_list_e_stdid = unique(stdid_list_e_stdid, incomparables = FALSE)
final_score_chart = data.frame(
"stdid" = stdid_list_e_stdid,
"final_score" = c(0)
)
for(i in 1:nrow(final_score_chart))
{
for(j in 1:nrow(DataChart))
{
if(DataChart$stdid[j] == final_score_chart$stdid[i])
{
if(DataChart$total_score[j] > final_score_chart$final_score[i])
{
final_score_chart$final_score[i] = DataChart$total_score[j];
}
}
}
}
#print(final_score_chart);
print("Lowest Final score")
print(min(final_score_chart$final_score));
lowest_final_score_e = min(final_score_chart$final_score)
#2.f) List of student with lowest final score
print("2.f)")
lowest_final_list = subset(final_score_chart, final_score == lowest_final_score_e);
print("List of student with lowest final score")
print(lowest_final_list$stdid);
#2.g) Spectral of submit time from students of lowest final score
print("2.g)")
lowest_final_list$times = c(0)
for (i in 1:nrow(lowest_final_list))
{
stdid_temp = lowest_final_list$stdid[i];
for(j in 1:nrow(DataChart))
{
stdid_temp_2 = DataChart$stdid[j];
if(!is.na(stdid_temp_2) && (stdid_temp_2 == stdid_temp))
{
lowest_final_list$times[i] = lowest_final_list$times[i] + 1;
}
}
}
print("List of student with lowest final score and submit time")
print(lowest_final_list);
lowest_final_list$times = as.integer(lowest_final_list$times)
lowest_final_list_plot = data.frame(
"times" = unique(lowest_final_list$times),
"frequency" = c(0)
)
for(i in 1:nrow(lowest_final_list_plot))
{
for(j in 1:nrow(lowest_final_list))
if(lowest_final_list_plot$times[i] == lowest_final_list$times[j] )
{
lowest_final_list_plot$frequency[i] = lowest_final_list_plot$frequency[i] + 1
}
}
print(lowest_final_list_plot)
barplot(lowest_final_list_plot$frequency,ylim = c(0,10),xlab = 'so lan nop',ylab = 'tan so xuat hien',names.arg = lowest_final_list_plot$times, main = "Pho tong so lan nop cua nhung hoc sinh co 1 diem tong ket thap nhat");
#2.h) Find Highest_score
print("2.h)")
highest_score = max(DataChart$total_score)
print("Highest Score");
print(highest_score);
#2.i) List of students with at least 1 highest score
print("2.i)")
highest_chart = subset(final_score_chart, final_score == highest_score)
print("stdid List of student with atleast one highest_score");
print(highest_chart$stdid);
#2.j) Spectral of submit time from students have at least a highest score submit
print("2.j)")
highest_final_list = data.frame(
"stdid" = highest_chart$stdid,
"times" = c(0)
)
for (i in 1:nrow(highest_final_list))
{
stdid_temp = highest_final_list$stdid[i];
for(j in 1:nrow(DataChart))
{
stdid_temp_2 = DataChart$stdid[j];
if(!is.na(stdid_temp_2) && (stdid_temp_2 == stdid_temp))
{
highest_final_list$times[i] = highest_final_list$times[i] + 1;
}
}
}
print("Highest final score chart and submit times");
print(highest_final_list);
highest_final_list_plot = data.frame(
"times" = unique(highest_final_list$times),
"frequency" = c(0)
)
for(i in 1:nrow(highest_final_list_plot))
{
for(j in 1:nrow(highest_final_list))
if(highest_final_list_plot$times[i] == highest_final_list$times[j] )
{
highest_final_list_plot$frequency[i] = highest_final_list_plot$frequency[i] + 1
}
}
print(highest_final_list_plot)
barplot(highest_final_list_plot$frequency,ylim = c(0,300),xlab = 'so lan nop',ylab = 'tan so xuat hien',names.arg = highest_final_list_plot$times, main = "Pho tong so lan nop cua nhung hoc sinh co 1 diem cao nhat");
#2.k)
print("2.k)")
highest_score = max(DataChart$total_score)
print("Highest Final Score");
print(highest_score);
#2.l)
print("2.l)")
print("stdid List of student with atleast one highest_score");
print(highest_chart$stdid);
#2.m)
print("2.m)")
print("Highest final score chart and submit times");
print(highest_final_list)
barplot(highest_final_list_plot$frequency,ylim = c(0,300),xlab = 'so lan nop',ylab = 'tan so xuat hien',names.arg = highest_final_list_plot$times, main = "Pho tong so lan nop cua nhung hoc sinh co diem tong ket cao nhat");
#2.n) Caculate average final_score of all student
print("2.n)")
average_final_score_all_student = sum(final_score_chart$final_score) / nrow(final_score_chart);
average_final_score_all_student = round(average_final_score_all_student * 10) / 10;
print("average_final_score_all_student")
print(average_final_score_all_student)
final_score_chart$average_score = c(0)
final_score_chart$times = c(0)
for (i in 1:nrow(final_score_chart))
{
stdid_temp = final_score_chart$stdid[i];
for(j in 1:nrow(DataChart))
{
stdid_temp_2 = DataChart$stdid[j];
if(!is.na(stdid_temp_2) && (stdid_temp_2 == stdid_temp))
{
final_score_chart$average_score[i] = final_score_chart$average_score[i] * final_score_chart$times[i] + DataChart$total_score[j]
final_score_chart$times[i] = final_score_chart$times[i] + 1
final_score_chart$average_score[i] = final_score_chart$average_score[i] / final_score_chart$times[i]
}
}
}
#2.o) Number of student have a average final score
print("2.o)")
score_match_average_list = subset(final_score_chart, final_score == average_final_score_all_student)
print("Number of student have a average final score")
print(nrow(score_match_average_list))
#2.p) Median, Max, Min
print("2.p)")
Median_final_score = median(final_score_chart$final_score)
print("Median average score");
print(Median_final_score);
Max_final_score = max(final_score_chart$final_score)
print("Max average score");
print(Max_final_score);
Min_final_score = min(final_score_chart$final_score)
print("Min average score");
print(Min_final_score);
#2.q)Range, Variance, Standard Deviation
print("2.q)")
range_final = range(final_score_chart$final_score)
print("Range of average score");
range_final_value = range_final[2] - range_final[1]
print(range_final_value)
#Create result_chart save total_submit and numofstudent classified by final score
result_chart = data.frame(
"score" = NULL,
"times" = NULL
)
for(i in 1:nrow(final_score_chart))
{
if(final_score_chart$final_score[i] %in% result_chart$score)
{
index = which(result_chart$score == final_score_chart$final_score[i])
result_chart$times[index] = result_chart$times[index] + 1
}
else
{
temp_chart = data.frame(
"score" = c(final_score_chart$final_score[i]),
"times" = 1
)
result_chart = rbind(result_chart,temp_chart)
}
}
variance_final_score = var(final_score_chart$final_score)
standard_deviation_final_score = sd(final_score_chart$final_score)
print("Variance average score")
print(variance_final_score)
print("Standard Deviation average score")
print(standard_deviation_final_score)
#2.r)Skewness and Kurtosis of Average Score
print("2.r)")
print("Skewness Average Score")
print(skewness(final_score_chart$final_score))
print("Kurtosis Average Score")
print(kurtosis(final_score_chart$final_score))
#2.s)Quantile 1st and 3rd
print("2.s)")
print("Quantile")
quantile(final_score_chart$final_score, 0.25)
quantile(final_score_chart$final_score, 0.75)
#2.t)
print("2.t)")
print("result_chart")
result_chart = result_chart[order(-result_chart$score), ,drop = FALSE]
print(result_chart$times[1] + result_chart$times[2])
#2.u)
print("2.u)")
final_score_list_first = subset(final_score_chart, final_score == result_chart$score[1])
final_score_list_second = subset(final_score_chart, final_score == result_chart$score[2])
final_score_list_first_second = rbind(final_score_list_second, final_score_list_first)
print(final_score_list_first_second)
final_score_list_first_second_plot = data.frame(
"times" = unique(final_score_list_first_second$times),
"frequency" = c(0)
)
for(i in 1:nrow(final_score_list_first_second_plot))
{
for(j in 1:nrow(final_score_list_first_second))
if(final_score_list_first_second_plot$times[i] == final_score_list_first_second$times[j] )
{
final_score_list_first_second_plot$frequency[i] = final_score_list_first_second_plot$frequency[i] + 1
}
}
print(final_score_list_first_second_plot)
barplot(final_score_list_first_second_plot$frequency,ylim = c(0,300),xlab = 'so lan nop',ylab = 'tan so xuat hien',names.arg = final_score_list_first_second_plot$times, main = "Pho so lan nop cua nhung hoc sinh co 1 diem tong ket cao nhat/nhi");
barplot(final_score_list_first_second_plot$frequency,ylim = c(0,300),xlab = 'so lan nop',ylab = 'tan so xuat hien',names.arg = final_score_list_first_second_plot$times, main = "Pho so lan nop cua nhung hoc sinh co 1 diem tong ket cao nhat/nhi");
#2.v)
print("2.v)")
print(result_chart)
#2.w)
print("2.w)")
result_chart$total_submit = c(0)
for(i in 1:nrow(result_chart))
{
for(j in 1:nrow(final_score_chart))
{
if(result_chart$score[i] == final_score_chart$final_score[j])
{
result_chart$total_submit[i] = result_chart$total_submit[i] + final_score_chart$times[j]
}
}
}
result_chart$score = c(1:nrow(result_chart))
print(result_chart)
print(sum(final_score_chart$times))
barplot(result_chart$times,xlab = 'Phan diem tong ket', ylim = c(0,400),ylab = 'So sinh vien',names.arg = result_chart$score, main = "Tong so sinh vien theo phan diem cao thu k");
barplot(result_chart$total_submit,ylim = c(0,400),xlab = 'Phan diem tong ket',ylab = 'So lan nop',names.arg = result_chart$score, main = "Tong so lan nop theo phan diem cao thu k");
barplot(result_chart$times,xlab = 'Phan diem tong ket', ylim = c(0,400),ylab = 'So sinh vien',names.arg = result_chart$score, main = "Tong so sinh vien theo phan diem cao thu k");
barplot(result_chart$total_submit,ylim = c(0,400),xlab = 'Phan diem tong ket',ylab = 'So lan nop',names.arg = result_chart$score, main = "Tong so lan nop theo phan diem cao thu k");
